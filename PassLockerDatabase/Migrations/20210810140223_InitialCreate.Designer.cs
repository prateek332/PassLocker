// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PassLockerDatabase;

namespace PassLockerDatabase.Migrations
{
    [DbContext(typeof(PassLockerDbContext))]
    [Migration("20210810140223_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PassLockerDatabase.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("gender");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location");

                    b.Property<string>("MemberSince")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("member_since");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("name");

                    b.Property<bool>("UserConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("user_confirmed");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("user_email");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("user_name");

                    b.Property<string>("UserPasswordHash")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_password_hash");

                    b.Property<string>("UserPasswordSalt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password_salt");

                    b.Property<string>("UserSecretAnswerHash")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_secret_answer_hash");

                    b.Property<string>("UserSecretSalt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_secret_salt");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("PassLockerDatabase.UserPasswords", b =>
                {
                    b.Property<int>("UserPasswordsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_password_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DomainName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("domain_name");

                    b.Property<string>("DomainPasswordHash")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("domain_password_hash");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("UserPasswordsId");

                    b.HasIndex("UserId");

                    b.ToTable("user_passwords");
                });

            modelBuilder.Entity("PassLockerDatabase.UserPasswords", b =>
                {
                    b.HasOne("PassLockerDatabase.User", "User")
                        .WithMany("StoredPasswords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PassLockerDatabase.User", b =>
                {
                    b.Navigation("StoredPasswords");
                });
#pragma warning restore 612, 618
        }
    }
}
